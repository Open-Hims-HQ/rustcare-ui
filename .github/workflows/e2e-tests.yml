name: E2E Tests & Coverage

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    name: Playwright E2E Tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps
      
      - name: Run unit tests with coverage
        run: pnpm test:coverage
        env:
          CI: true
      
      - name: Run Playwright E2E tests
        run: pnpm test:e2e
        env:
          CI: true
      
      - name: Prepare GitHub Pages content
        if: always()
        run: |
          mkdir -p gh-pages
          cp index.html gh-pages/
          if [ -d "coverage" ]; then
            cp -r coverage gh-pages/
          else
            echo "Warning: coverage directory not found"
          fi
          if [ -d "playwright-report" ]; then
            cp -r playwright-report gh-pages/
          else
            echo "Warning: playwright-report directory not found"
          fi
          # Create placeholder for backend coverage
          mkdir -p gh-pages/backend-coverage
          cat > gh-pages/backend-coverage/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>Backend Coverage - Coming Soon</title>
              <style>
                  body {
                      font-family: system-ui, sans-serif;
                      display: flex;
                      align-items: center;
                      justify-content: center;
                      min-height: 100vh;
                      margin: 0;
                      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                      color: white;
                      text-align: center;
                  }
                  .container { max-width: 600px; padding: 2rem; }
                  h1 { font-size: 2.5rem; margin-bottom: 1rem; }
                  p { font-size: 1.2rem; opacity: 0.9; }
                  a { color: white; text-decoration: underline; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>ðŸ¦€ Backend Coverage</h1>
                  <p>Rust backend coverage reports are generated separately.</p>
                  <p><a href="https://github.com/open-hims/rustcare-engine/actions">View Backend Test Runs â†’</a></p>
              </div>
          </body>
          </html>
          EOF
          ls -la gh-pages/
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30
      
      - name: Upload test videos
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: test-videos
          path: test-results/
          retention-days: 7
      
      - name: Setup Pages
        if: always() && github.ref == 'refs/heads/main'
        uses: actions/configure-pages@v4
        continue-on-error: true
      
      - name: Upload to GitHub Pages
        if: always() && github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: gh-pages
        continue-on-error: true
      
      - name: Deploy to GitHub Pages
        id: deployment
        if: always() && github.ref == 'refs/heads/main'
        uses: actions/deploy-pages@v4
        continue-on-error: true
